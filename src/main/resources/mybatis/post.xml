<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.model.mapper.PostMapper">

	<update id="postUpdate" parameterType="int">
		UPDATE post
		SET member_num = 1
		WHERE member_num = #{member_num}
	</update>
	
	<select id="checkPost" parameterType="Map" resultType="int">
		SELECT COUNT(post_num)
		FROM post
		WHERE member_num = #{member_num} AND post_num = #{post_num}
	</select>
	
	<select id="getPost" parameterType="int" resultType="int">
		SELECT member_num
		FROM post
		WHERE post_num = #{post_num}
	</select>

	<select id="postList" parameterType="int" resultType="PostDTO">
		SELECT p.member_num, p.post_num, p.thumbnail, p.title, p.season, p.`type`, p.created_date, m.nickname, l.region
		FROM post AS p, member AS m, location AS l
		WHERE p.member_num = #{num} AND p.member_num = m.num AND p.region_num = l.num
		ORDER BY p.post_num ASC
	</select>
	
	<select id="search" parameterType="Map" resultType="PostDTO">
		SELECT p.member_num, p.post_num, p.thumbnail, p.title, p.season, p.`type`, p.created_date, m.nickname, l.region
		FROM post AS p, member AS m, location AS l
		WHERE
			p.region_num = l.num AND
			p.member_num = m.num
		    <if test='type1 != "E"'>
		    AND SUBSTRING(p.`type`, 1, 1) = #{type1}
		    </if>
		    <if test='type2 != "E"'>
		    AND SUBSTRING(p.`type`, 2, 1) = #{type2}
		    </if>
		    <if test='type3 != "E"'>
		    AND SUBSTRING(p.`type`, 3, 1) = #{type3}
		    </if>
		    <if test='value != "null"'>
		    AND p.title LIKE CONCAT('%',#{value},'%')
		    </if>
		    <if test='season != "null"'>
		    AND p.season = #{season}
		    </if>
		ORDER BY p.post_num ASC
	</select>
	
	<insert id="create" parameterType="PostDTO">
		INSERT INTO post(title, content, region_num, season, TIME, cost, TYPE, thumbnail, created_date, member_num)
		VALUES(#{title}, #{content}, #{region_num}, #{season}, #{time}, #{cost}, #{type}, #{thumbnail}, NOW(), #{member_num})
	</insert>
	
	<select id="read" parameterType="int" resultType="PostDTO">
		SELECT * FROM post WHERE post_num = #{num}
	</select>
	
	<select id="getLocation" parameterType="int" resultType="String">
		SELECT region FROM location WHERE num = #{num}
	</select>
	
	<delete id="delete" parameterType="int">
		DELETE FROM post WHERE post_num = #{post_num}
	</delete>
	
	<update id="update" parameterType="PostDTO">
		UPDATE post 
		<set> 
				title = #{title}, content = #{content}, region_num = #{region_num}, season = #{season},
				time = #{time}, cost = #{cost}, TYPE = #{type}, thumbnail = #{thumbnail}, updated_date = NOW()
		</set>
		WHERE post_num = #{post_num}
	</update>
	
	<select id="list" parameterType="Map" resultType="PostDTO">
		SELECT R1.*
		FROM(    
			SELECT p.member_num, p.post_num, p.thumbnail, p.title, p.season, p.`type`, m.nickname, l.region    
			FROM post AS p, member AS m, location AS l    
			WHERE p.member_num = m.num AND p.region_num = l.num
		) R1
		ORDER BY post_num DESC
		LIMIT #{no}, #{pagePost}
	</select>
	
	<select id="mypost" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM post
		WHERE member_num = #{member_num}
	</select>
	
	<select id="total" resultType="int">
		SELECT COUNT(*)
		FROM post
	</select>
	
</mapper>